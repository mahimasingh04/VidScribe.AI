version: '3.8'
services:
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"            # S3 endpoint
     
    environment:
      - SERVICES=s3,rabbitmq   # Enable S3 + RabbitMQ
      - DEBUG=1
      - DEFAULT_REGION=ap-south-1
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
    volumes:
      - ./localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock



  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP port (for Python/Node.js clients)
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"

    env_file: 
      - ./web-app/my-app/.env  # Load variables from .env file
    environment:
       MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
       MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
       MONGO_INITDB_DATABASE: "${MONGO_INITDB_DATABASE}"
    volumes:
      - ./mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 10s
      retries: 5

      # Add these later when ready:
  # mongodb:
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  #
  # worker:
  #   build: ./worker
  #   depends_on:
  #     - localstack
  #     - mongodb